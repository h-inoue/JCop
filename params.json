{"name":"JCop","tagline":"A COP language extension to Java","body":"# Introduction\r\nJCop is a â€‹[context-oriented programming](http://www.hpi.uni-potsdam.de/swa/cop) (COP) extension to the Java programming language. It combines COP features - introduced by its predecessor [ContextJ](https://www.hpi.uni-potsdam.de/swa/trac/Cop/wiki/ContextJ) - with new constructs for declarative and event-based layer composition and a first-class event-based context representation.\r\n\r\n**Modularization.** Behavioral variations are modularized by layers that can either be defined within classes (layer-in-class) or in dedicated top-level modules (class-in-layer). Layers contain partial method definitions that extend or replace a plain method while their layers are active.\r\n\r\n**Dynamic Composition.** JCop provides control-flow specific layer composition as known from other COP languages. In addition, it offers declarative composition statements that are specified within context modules and thus combines COP with concepts of aspect-oriented programming.\r\n\r\nFind more information in our [Wiki](https://github.com/MalteAppeltauer/JCop/wiki/JCop).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}